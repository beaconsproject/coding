---
title: "Subalpine fir - extracting covariates"
subtitle: "Pierre Vernier (2024-02-26)"
format: html
toc: true
---

## Introduction

Objectives:

1. Download bioclimate data (tiles) from Worldclim
2. Clip the tiles to KDTT study area
3. Extract bioclimate data using random subalpine fir location

## Methods

### Load required libraries

```{r}
#| message: FALSE
#| warning: FALSE
library(sf)
library(tmap)
library(dplyr)
library(terra)
library(tmaptools)
library(geodata)
set.seed(123)
```

### View study area

```{r}
#| message: FALSE
#| warning: FALSE
bnd <- st_read('data/kdtt.gpkg', 'bnd', quiet=TRUE)
tm_basemap(server = c("Esri.WorldTopoMap")) +
tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2)
```

### Download and prepare bioclimate data

We will use the `worldclim_tile` function in the `geodata` package to download a standard set of 19 bioclimatic variables from the Worlclim website (https://worldclim.org/data/worldclim21.html). We will select the highest resolution data available (~1 km2) representing an average for the years 1970-2000 (climate normal). AdaptWest (https://adaptwest.databasin.org/pages/adaptwest-climatena/) also provides a similar set of datasets, the disadvantage being that they have to be downloaded manually.

The KDTT study area requires that I download two tiles of data. 

```{r}
#| message: FALSE
#| warning: FALSE
bnd4326 <- st_transform(bnd, 4326)
# Uncomment next 2 lines to download climate data from Worlclim
#d1 <- worldclim_tile(var='bio', lon=-128, lat=59, path='tmp')
#d2 <- worldclim_tile(var='bio', lon=-128, lat=61, path='tmp')
```

### Read and rename raster layers

Once downloaded, we rename the 19 rasters to bio1-bio19.

```{r}
#| message: FALSE
#| warning: FALSE
t1 <- rast('data_raw/tile_14_wc2.1_30s_bio.tif')
names(t1)
names(t1) <- paste0("bio", c(1, 10:19, 2:9))
names(t1)
t2 <- rast('data_raw/tile_2_wc2.1_30s_bio.tif')
names(t2) <- paste0("bio", c(1, 10:19, 2:9))
names(t2)
```

### Clip covariates to study area

Now we can use the KDTT study area boundary to clip the bioclimate rasters and then merge them.

```{r}
#| message: FALSE
#| warning: FALSE
t1_crop <- crop(t1, vect(bnd4326))
t1_msk <- mask(t1_crop, vect(bnd4326))
t2_crop <- crop(t2, vect(bnd4326))
t2_msk <- mask(t2_crop, vect(bnd4326))
tt <- merge(t1_msk, t2_msk)
tt
#writeRaster(tt, 'data/bio.tif', overwrite=TRUE)
```

### View some of the merged raster layers

We will take a look at two of the layers, temperature and precipitation.

**Temperature**

```{r}
#| message: FALSE
#| warning: FALSE
pal <- get_brewer_pal("-RdYlBu", n=5, plot=FALSE)
tm_basemap(server = c("Esri.WorldTopoMap")) +
tm_shape(tt[["bio5"]]) + tm_raster(col.scale=tm_scale_intervals(n=5, style="pretty", values=pal), 
    col.legend = tm_legend(title = "Temperature (*C)", position = tm_pos_in("left", "bottom")),
    col_alpha=1) +
  tm_shape(bnd4326) + tm_polygons(fill_alpha=0, col="black", lwd=2)
```

**Precipitation**

```{r}
#| message: FALSE
#| warning: FALSE
tm_basemap(server = c("Esri.WorldTopoMap")) +
tm_shape(tt[["bio13"]]) + tm_raster(col.scale=tm_scale_intervals(n=5, style="pretty", values="Blues"), 
    col.legend = tm_legend(title = "Precipitation (mm)", position = tm_pos_in("left", "bottom")),
    col_alpha=1) +
  tm_shape(bnd4326) + tm_polygons(fill_alpha=0, col="black", lwd=2)
```

### Extract bioclimate data using points

We can now extract the bioclimate data using our random presence-absence points for subalpine fir. We first read the subalpine fir random presence/absence file that we created last time. We use that file to extract the 19 bioclimate variable values at each point. Finally, we merge them back to the points file.

```{r}
#| message: FALSE
#| warning: FALSE
abla_pts <- st_read('data/kdtt.gpkg', 'abla') %>%
  st_transform(4326)
abla_bio <- extract(tt, vect(abla_pts))
abla_pts_bio <- bind_cols(abla_pts, abla_bio)
abla_pts_bio
```

### Map bioclimate values at points

```{r}
#| message: FALSE
#| warning: FALSE
tm_basemap(server = c("Esri.WorldTopoMap")) +
tm_shape(bnd4326) + tm_polygons(fill_alpha=0, col="black", lwd=2) +
  tm_shape(abla_pts_bio) + tm_dots(fill='bio3', size=0.3,
    fill.legend = tm_legend(title = "Subalpine Fir", position = tm_pos_in("right", "top"))) +
  tm_layout(legend.text.size = 0.8)
```

### Map bioclimate raster with presence/absence

```{r}
#| message: FALSE
#| warning: FALSE
tm_basemap(server = c("Esri.WorldTopoMap")) +
tm_shape(tt[["bio13"]]) + tm_raster(col.scale=tm_scale_intervals(n=5, style="pretty", values="Blues"), 
    col.legend = tm_legend(title = "Precipitation (mm)", position = tm_pos_in("left", "bottom")),
    col_alpha=1) +
  tm_shape(bnd4326) + tm_polygons(fill_alpha=0, col="black", lwd=2) +
  tm_shape(abla_pts_bio) + tm_dots(fill='PresenceAbsence', size=0.3,
    fill.legend = tm_legend(title = "Subalpine Fir", position = tm_pos_in("right", "top"))) +
  tm_layout(legend.text.size = 0.8)
```

### Split sample into training and testing

Prior to developing a model, we split the data into a training (70%) and testing set (30%). Other splits or even multiple splits can be used.

```{R}
#set.seed(123)
abla_train <- abla_bio %>%
  sample_frac(size = 0.7)
table(abla_train$PresenceAbsence)
abla_val <- abla_bio %>%
  anti_join(abla_train, by = "ID")
table(abla_val$PresenceAbsence)
```

### Comparing presence-absence density plots for covariates
