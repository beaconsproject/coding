---
title: "Subalpine fir distribution - Part 1"
subtitle: "Pierre Vernier (2024-02-05)"
format: html
toc: true
---

# Objectives

- To read and view a map of your study area
- To download species data from GBIF
- To map the distribution of species in your study area

You will first need to make sure you have the R packages listed below, otherwise you will need to install them using the `install.packages` function:

```{r}
# Uncomment the next line to install the packages
#install.packages(c('sf', 'tmap', 'dplyr', 'terra', 'tmaptools', 'geodata', 'mapview'))
```


```{r}
library(sf)
library(tmap)
library(dplyr)
library(terra)
library(tmaptools)
library(geodata)
library(mapview)
```

# Study area

The example study area is the Kaska Dene Traditional Territory.

```{r}
bnd <- st_read('data/kdtt.gpkg', 'bnd', quiet=TRUE)
plot(bnd)
```

### Plot geometry only

```{r}
plot(st_geometry(bnd))
```


### Plot using the `tmap` package

```{r}
tmap_mode("plot")
tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2)
```

### Add a basemap

```{r}
tm_basemap(server = "Esri.WorldTopoMap") +
tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2)
```

### View interactive map

```{r}
mapview(bnd)
```

# Distribution data

Since I don't have any of my own data, I will try to acquire existing subalpine fir location data. Sources of species distribution data include the Global Biodiversity Information Facility (GBIF). The `geodata` includes a function to download data from GBIF.

```{r}

# Specify genus and species for species of interest (e.g., alces alces for moose)
genus = 'abies'
species = 'lasiocarpa'

# Buffer by 100k (optional but may result in additional nearby data)
bnd100 <- st_buffer(bnd, 100000)

# Download GBIF data and convert to sf point object
g <- sp_occurrence(genus, species, geo=TRUE, end=2500)

gg <- select(g, lon, lat, year) %>%
  st_as_sf(coords = c("lon", "lat"), crs=4326) %>%
  st_transform(3578)
gg
```

### Map download points

```{r}
mapview(bnd100, alpha.regions=0, lwd=1) + 
  mapview(bnd, alpha.regions=0, lwd=1) + 
  mapview(gg, cex=1, col='red', col.regions='red', legend=NULL)
```

### Select subset of data

```{r}
# Select points that are within the buffered study region
gg_sub <- gg[bnd100,]
gg_sub
```

### Plot subalpine fir locations

```{r}
# Plot AOI + points
tm_basemap(server = c("Esri.WorldTopoMap", "Esri.WorldImagery")) +
tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2) +
  tm_shape(bnd100) + tm_polygons(color='black', fill_alpha=0, lwd=1) +
    tm_shape(gg_sub) + tm_dots()
```

### Plot subalpine fir locations (interactive)

```{r}
library(mapview)
mapview(bnd100, alpha.regions=0, lwd=1) + 
  mapview(bnd, alpha.regions=0, lwd=1) + 
  mapview(gg_sub, cex=4, col='red', col.regions='red', legend=NULL)
```

####################################################################################################

# Subalpine fir distribution - Part 2

# Objectives

- To read and view a map of your study area
- To download species data from GBIF
- To map the distribution of species in your study area

# Study area

```{r}
#| message: FALSE
#| warning: FALSE
bnd <- st_read('data/kdtt.gpkg', 'bnd', quiet=TRUE)
tmap_mode("plot")
tm_basemap(server = c("Esri.WorldTopoMap", "Esri.WorldImagery")) +
tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2)
```

# Distribution data

## Clip tree raster data to study area

```{r}
#| message: FALSE
#| warning: FALSE
trees <- rast('data/tree_species.tif') #|>
  #crop(bnd) |>
  #mask(bnd)
plot(trees)
```

### Tree species codes

```{r}
#| message: FALSE
#| warning: FALSE
# https://gee-community-catalog.org/projects/ca_species/
spp <- tibble(code=c(0,3,10,16,17,18,23,29), # these are the species codes in the raster
  spp=c('na','Subalpine fir','White birch','Engelmann spruce','White spruce',
    'Black spruce','Lodgepole pine','Trembling aspen'))
spp
```

## Reclassify tree species map to subalpine fir = 1 and everything else = 0

```{r}
#| message: FALSE
#| warning: FALSE
r_abla <- classify(trees, rbind(c(-1,2,0),  c(2,3,1), c(4,30,0)))
plot(r_abla)
```

## Create subalpine fir datasets using random sample of pixels

To do this we're going to randomly sample around 1000 subalpine fir pixels and 1000 non subalpine fir pixels. We first set a random number seed so that we can replicate the sample. Without setting a seed, you would get a different random sample each time you ran the code segment. This could be useful if you wanted to generate a few hundred or few thousand samples in order to get a distribution of random samples.  

```{r}
#| message: FALSE
#| warning: FALSE

# Set random number seed
set.seed(123)

# Draw a stratified random sample of 1000 pixels
abla <- spatSample(r_abla, 1000, method='stratified', xy=TRUE, values=TRUE, na.rm=TRUE) |> 
  st_as_sf(coords = c("x", "y"), crs=3578) # convert to an "sf" object
abla
```

The new variable is called "b1" and contains values of 0 (absent) and 1 (present). We'll rename it to "Occurrence" and create a second variable with character values "present" and "absent".
```{r}
#| message: FALSE
#| warning: FALSE

# Rename b1 and create a second variable which is a 
abla <- rename(abla, Occurrence=b1) |>
  mutate(PresenceAbsence=ifelse(Occurrence==1, "Present", "Absent"), b1=NULL)
abla

# Uncomment to save results to a geopackage
st_write(abla, 'data/kdtt.gpkg', 'abla', delete_layer=T)
```

## Map presence-absence of subalpine fir

```{r}
#| message: FALSE
#| warning: FALSE
tm_basemap(server = c("Esri.WorldTopoMap", "Esri.WorldImagery")) +
tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2) +
  tm_shape(abla) + tm_dots(fill='PresenceAbsence', size=0.3,
  fill.legend = tm_legend(title = "Subalpine Fir", position = tm_pos_in("right", "top"))) +
  tm_layout(legend.text.size = 0.8)
```

## Map presence-absence (interactive mode)

```{r}
#| message: FALSE
#| warning: FALSE
tmap_mode("plot")
tm_basemap(server = c("Esri.WorldTopoMap", "Esri.WorldImagery")) +
  tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2) +
    tm_shape(abla) + tm_dots(fill='PresenceAbsence', size=0.3,
    fill.legend = tm_legend(title = "Subalpine Fir", position = tm_pos_in("right", "top"))) +
    tm_layout(legend.text.size = 0.8)
```

```{r}
#| message: FALSE
#| warning: FALSE
library(mapview)
mapview(bnd, alpha.regions=0, lwd=2) + 
  mapview(abla, zcol='PresenceAbsence', col.regions=c('red','blue'), cex=2)
```

####################################################################################################

## Introduction

Objectives:

1.  Download bioclimate data (tiles) from Worldclim
2.  Clip the tiles to KDTT study area
3.  Extract bioclimate data using random subalpine fir location

## Methods


### View study area

```{r}
#| message: FALSE
#| warning: FALSE
bnd <- st_read('data/kdtt.gpkg', 'bnd', quiet=TRUE)
tm_basemap(server = c("Esri.WorldTopoMap")) +
tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2)
```

### Download and prepare bioclimate data

We will use the `worldclim_tile` function in the `geodata` package to download a standard set of 19 bioclimatic variables from the [Worlclim website](https://worldclim.org/data/worldclim21.html). We will select the highest resolution data available (\~1 km2) representing an average for the years 1970-2000 (climate normal). [AdaptWest](https://adaptwest.databasin.org/pages/adaptwest-climatena/) also provides a similar set of datasets, the disadvantage being that they have to be downloaded manually.

The KDTT study area requires that I download two tiles of data.

```{r}
#| message: FALSE
#| warning: FALSE
bnd4326 <- st_transform(bnd, 4326)
# Uncomment next 2 lines to download climate data from Worlclim
d1 <- worldclim_tile(var='bio', lon=-128, lat=59, path='../data_raw/tmp')
d2 <- worldclim_tile(var='bio', lon=-128, lat=61, path='../data_raw/tmp')
```

### Read and rename raster layers

Once downloaded, we rename the 19 rasters to bio1-bio19.

```{r}
#| message: FALSE
#| warning: FALSE
t1 <- rast('../data_raw/tile_14_wc2.1_30s_bio.tif')
names(t1)
names(t1) <- paste0("bio", c(1, 10:19, 2:9))
names(t1)
t2 <- rast('../data_raw/tile_2_wc2.1_30s_bio.tif')
names(t2) <- paste0("bio", c(1, 10:19, 2:9))
names(t2)
```

### Clip covariates to study area

Now we can use the KDTT study area boundary to clip the bioclimate rasters and then merge them.

```{r}
#| message: FALSE
#| warning: FALSE
t1_crop <- crop(t1, vect(bnd4326))
t1_msk <- mask(t1_crop, vect(bnd4326))
t2_crop <- crop(t2, vect(bnd4326))
t2_msk <- mask(t2_crop, vect(bnd4326))
tt <- merge(t1_msk, t2_msk)
tt
#writeRaster(tt, 'data/bio.tif', overwrite=TRUE)
```

### View some of the merged raster layers

We will take a look at two of the layers, temperature and precipitation.

**Temperature**

bio5 = Max Temperature of Warmest Month

```{r}
#| message: FALSE
#| warning: FALSE
pal <- get_brewer_pal("-RdYlBu", n=5, plot=FALSE)
tm_basemap(server = c("Esri.WorldTopoMap")) +
tm_shape(tt[["bio5"]]) + tm_raster(col.scale=tm_scale_intervals(n=5, style="pretty", values=pal), 
    col.legend = tm_legend(title = "Temperature (*C)", position = tm_pos_in("left", "bottom")),
    col_alpha=1) +
  tm_shape(bnd4326) + tm_polygons(fill_alpha=0, col="black", lwd=2)
```

**Precipitation**

bio13 = Precipitation of Wettest Month

```{r}
#| message: FALSE
#| warning: FALSE
tm_basemap(server = c("Esri.WorldTopoMap")) +
tm_shape(tt[["bio13"]]) + tm_raster(col.scale=tm_scale_intervals(n=5, style="quantile", values="Blues"), 
    col.legend = tm_legend(title = "Precipitation (mm)", position = tm_pos_in("left", "bottom")),
    col_alpha=1) +
  tm_shape(bnd4326) + tm_polygons(fill_alpha=0, col="black", lwd=2)
```

### Extract bioclimate data using points

We can now extract the bioclimate data using our random presence-absence points for subalpine fir. We first read the subalpine fir random presence/absence file that we created last time. We use that file to extract the 19 bioclimate variable values at each point. Finally, we merge them back to the points file.

```{r}
#| message: FALSE
#| warning: FALSE
abla_pts <- st_read('data/kdtt.gpkg', 'abla') %>%
  st_transform(4326)
abla_bio <- extract(tt, vect(abla_pts))
abla_pts_bio <- bind_cols(abla_pts, abla_bio)
abla_pts_bio
```

### Map bioclimate values at points

```{r}
#| message: FALSE
#| warning: FALSE
tmap_mode("view")
tm_basemap(server = c("Esri.WorldTopoMap")) +
tm_shape(bnd4326) + tm_polygons(fill_alpha=0, col="black", lwd=2) +
  tm_shape(abla_pts_bio) + tm_dots(fill='bio3', size=0.3,
    fill.legend = tm_legend(title = "Precipitation (mm)", position = tm_pos_in("right", "top"))) +
  tm_layout(legend.text.size = 0.8)
```

### Map bioclimate raster with presence/absence

```{r}
#| message: FALSE
#| warning: FALSE
tmap_mode("view")
tm_basemap(server = c("Esri.WorldTopoMap")) +
tm_shape(tt[["bio13"]]) + tm_raster(col.scale=tm_scale_intervals(n=5, style="pretty", values="Blues"), 
    col.legend = tm_legend(title = "Precipitation (mm)", position = tm_pos_in("left", "bottom")),
    col_alpha=1) +
  tm_shape(bnd4326) + tm_polygons(fill_alpha=0, col="black", lwd=2) +
  tm_shape(abla_pts_bio) + tm_dots(fill='PresenceAbsence', size=0.3,
    fill.legend = tm_legend(title = "Subalpine Fir", position = tm_pos_in("right", "top"))) +
  tm_layout(legend.text.size = 0.8)
```

### Split sample into training and testing

Prior to developing a model, we split the data into a training (70%) and testing set (30%). Other splits or even multiple splits can be used. Next week we will use the training set to develop a simple model predicting subalpine fir occurrence. We will then use the holdout data or testing set to assess the predictive accuracy of the model.

```{R}
#set.seed(123)
abla_train <- abla_pts_bio %>%
  sample_frac(size = 0.7)
table(abla_train$PresenceAbsence)
abla_val <- abla_bio %>%
  anti_join(abla_train, by = "ID")
table(abla_val$PresenceAbsence)
```

