---
title: "Subalpine fir distribution - Part 2"
subtitle: "Pierre Vernier (2024-02-12)"
format: html
toc: true
---

```{r}
#| message: FALSE
#| warning: FALSE
library(sf)
library(tmap)
library(dplyr)
library(terra)
library(tmaptools)
library(geodata)
```

# Objectives

- To read and view a map of your study area
- To download species data from GBIF
- To map the distribution of species in your study area

# Study area

```{r}
#| message: FALSE
#| warning: FALSE
bnd <- st_read('data/kdtt.gpkg', 'bnd', quiet=TRUE)
tmap_mode("plot")
tm_basemap(server = c("Esri.WorldTopoMap", "Esri.WorldImagery")) +
tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2)
```

# Distribution data

## Clip tree raster data to study area

```{r}
#| message: FALSE
#| warning: FALSE
trees <- rast('data/tree_species.tif') #|>
  #crop(bnd) |>
  #mask(bnd)
plot(trees)
```

### Tree species codes

```{r}
#| message: FALSE
#| warning: FALSE
# https://gee-community-catalog.org/projects/ca_species/
spp <- tibble(code=c(0,3,10,16,17,18,23,29), # these are the species codes in the raster
  spp=c('na','Subalpine fir','White birch','Engelmann spruce','White spruce',
    'Black spruce','Lodgepole pine','Trembling aspen'))
spp
```

## Reclassify tree species map to subalpine fir = 1 and everything else = 0

```{r}
#| message: FALSE
#| warning: FALSE
r_abla <- classify(trees, rbind(c(-1,2,0),  c(2,3,1), c(4,30,0)))
plot(r_abla)
```

## Create subalpine fir datasets using random sample of pixels

To do this we're going to randomly sample around 1000 subalpine fir pixels and 1000 non subalpine fir pixels. We first set a random number seed so that we can replicate the sample. Without setting a seed, you would get a different random sample each time you ran the code segment. This could be useful if you wanted to generate a few hundred or few thousand samples in order to get a distribution of random samples.  

```{r}
#| message: FALSE
#| warning: FALSE

# Set random number seed
set.seed(5618856)

# Draw a stratified random sample of 1000 pixels
abla <- spatSample(r_abla, 1000, method='stratified', xy=TRUE, values=TRUE, na.rm=TRUE) |> 
  st_as_sf(coords = c("x", "y"), crs=3578) # convert to an "sf" object
abla
```

The new variable is called "b1" and contains values of 0 (absent) and 1 (present). We'll rename it to "Occurrence" and create a second variable with character values "present" and "absent".
```{r}
#| message: FALSE
#| warning: FALSE

# Rename b1 and create a second variable which is a 
abla <- rename(abla, Occurrence=b1) |>
  mutate(PresenceAbsence=ifelse(Occurrence==1, "Present", "Absent"), b1=NULL)
abla

# Uncomment to save results to a geopackage
#st_write(abla, 'data/abla.gpkg', 'abla', delete_layer=T)
```

## Map presence-absence of subalpine fir

```{r}
#| message: FALSE
#| warning: FALSE
tm_basemap(server = c("Esri.WorldTopoMap", "Esri.WorldImagery")) +
tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2) +
  tm_shape(abla) + tm_dots(fill='PresenceAbsence', size=0.3,
  fill.legend = tm_legend(title = "Subalpine Fir", position = tm_pos_in("right", "top"))) +
  tm_layout(legend.text.size = 0.8)
```

## Map presence-absence (interactive mode)

```{r}
#| message: FALSE
#| warning: FALSE
tmap_mode("view")
tm_basemap(server = c("Esri.WorldTopoMap", "Esri.WorldImagery")) +
  tm_shape(bnd) + tm_polygons(color='black', fill_alpha=0, lwd=2) +
    tm_shape(abla) + tm_dots(fill='PresenceAbsence', size=0.3,
    fill.legend = tm_legend(title = "Subalpine Fir", position = tm_pos_in("right", "top"))) +
    tm_layout(legend.text.size = 0.8)
```

```{r}
#| message: FALSE
#| warning: FALSE
library(mapview)
mapview(bnd, alpha.regions=0, lwd=2) + 
  mapview(abla, zcol='PresenceAbsence', col.regions=c('red','blue'), cex=2)
```
